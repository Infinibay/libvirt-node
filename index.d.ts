/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class Connection {
  static open(name: string): Connection
  isAlive(): boolean
  getSysInfo(flags: number): string
  getMaxVcpus(attr: string): number
  getCpuModelsNames(arch: string, flags: number): Array<string>
  isEncrypted(): boolean
  isSecure(): boolean
  listActiveDomainIds(): Array<number>
  listInterfaces(): Array<string>
  listNetworks(): Array<string>
  listNwFilters(): Array<string>
  listSecrets(): Array<string>
  listStoragePools(): Array<string>
  listAllDomains(flags: number): Array<Machine>
  listAllNetworks(flags: number): Array<Network>
  listAllInterfaces(flags: number): Array<Interface>
  listAllNodeDevices(flags: number): Array<NodeDevice>
  listAllSecrets(flags: number): Array<Secret>
  listAllStoragePools(flags: number): Array<StoragePool>
  listAllNwFilters(flags: number): Array<NWFilter>
  listDefinedDomains(): Array<string>
  listDefinedInterfaces(): Array<string>
  listDefinedStoragePools(): Array<string>
  listDefinedNetworks(): Array<string>
  numOfDomains(): number
  numOfInterfaces(): number
  numOfNetworks(): number
  numOfStoragePools(): number
  numOfNwFilters(): number
  numOfSecrets(): number
  numOfNodeDevices(): number
  numOfDefinedDomains(): number
  numOfDefinedInterfaces(): number
  numOfDefinedNetworks(): number
  getHypVersion(): number
  compareCpu(xml: string, flags: number): number
  getFreeMemory(): bigint
  getNodeInfo(): NodeInfo
  setKeepAlive(interval: number, count: number): number
  domainXmlFromNative(nformat: string, nconfig: string, flags: number): string
  domainXmlToNative(nformat: string, dxml: string, flags: number): string
  getDomainCapabilities(emulatorbin: string, arch: string, machine: string, virttype: string, flags: number): string
  getAllDomainStats(stats: number, flags: number): Array<DomainStatsRecord>
  baselineCpu(xmlcpus: Array<string>, flags: number): string
  findStoragePoolSources(kind: string, spec: string, flags: number): string
}
export class Machine {
  static lookupByName(name: string, con: Connection): this
}
export class Network { }
export class Interface { }
export class NodeDevice { }
export class Secret { }
export class StoragePool { }
export type NWFilter = NwFilter
export class NwFilter { }
export class NodeInfo { }
export class DomainStatsRecord { }
